/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 24 19:30:12 GMT 2023
 */

package org.jsoup.examples;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.examples.HtmlToPlainText;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HtmlToPlainText_ESTest extends HtmlToPlainText_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("");
      Element element0 = document0.text("\n");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("");
      Element element0 = document0.text("32L/Sc<I,-N,%#-?& ");
      document0.appendTo(element0);
      // Undeclared exception!
      htmlToPlainText0.getPlainText(element0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("");
      document0.prependElement("h1");
      Element element0 = document0.text(" ");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("\n\n", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("");
      document0.prepend("J");
      Element element0 = document0.text(" ");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("J ", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("a", parseSettings0);
      CDataNode cDataNode0 = new CDataNode("#1wPfbMQYCQRmh~5x");
      Attributes attributes0 = cDataNode0.attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "\nZ", attributes0);
      String string0 = htmlToPlainText0.getPlainText(pseudoTextElement0);
      assertEquals(" <>", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = Document.createShell("Mozilla/5.0 (jsoup)");
      Element element0 = document0.createElement("dt");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("  \n", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HtmlToPlainText htmlToPlainText0 = new HtmlToPlainText();
      Document document0 = new Document("");
      Element element0 = document0.createElement("li");
      String string0 = htmlToPlainText0.getPlainText(element0);
      assertEquals("\n * ", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[4];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // usage: java -cp jsoup.jar org.jsoup.examples.HtmlToPlainText url [selector]
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        HtmlToPlainText.main(stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Must supply a valid URL
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
