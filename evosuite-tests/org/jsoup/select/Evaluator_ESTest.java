/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 24 19:23:30 GMT 2023
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Tag;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Elements;
import org.jsoup.select.Evaluator;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      Tag tag0 = Tag.valueOf("#data");
      CDataNode cDataNode0 = new CDataNode("?");
      Attributes attributes0 = cDataNode0.attributes();
      Element element0 = new Element(tag0, "?", attributes0);
      element0.html("'s");
      boolean boolean0 = evaluator_MatchText0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Tag tag0 = Tag.valueOf("`sY");
      Attributes attributes0 = new Attributes();
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "aside", attributes0);
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      boolean boolean0 = evaluator_MatchText0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Document document0 = Document.createShell("nth-last-of-type");
      boolean boolean0 = evaluator_IsEmpty0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("=R<!SVy[D$7?e:41s8z", parseSettings0);
      Element element0 = new Element(tag0, "");
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      boolean boolean0 = evaluator_IsEmpty0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Document document0 = new Document("?s:Oe%!`M?G./_iW%um");
      Document document1 = document0.normalise();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Element element0 = document1.head();
      element0.after("WnzJ*8Ts|");
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Document document0 = Document.createShell("OH04%}4pc&j");
      Element element0 = document0.appendElement("OH04%}4pc&j");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Document document0 = new Document("?s:Oe%!`M?G./_iW%um");
      Document document1 = document0.normalise();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Element element0 = document1.head();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Document document0 = Document.createShell("mQ");
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      boolean boolean0 = evaluator_IsOnlyOfType0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Document document0 = Document.createShell("'7NIf3 %'E ;qG");
      Element element0 = document0.head();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Document document0 = Document.createShell("OH04%}4pc&j");
      document0.prependChild(document0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Document document0 = Document.createShell("OH04%}4pc&j");
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      boolean boolean0 = evaluator_IsOnlyChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      Document document0 = new Document(":last-of-type");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsRoot0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Document document0 = Document.createShell("=O.WX~uBZR79ln");
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      boolean boolean0 = evaluator_IsRoot0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("figure");
      Element element0 = document0.body();
      boolean boolean0 = evaluator_IsFirstChild0.matches((Element) null, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("ox'2'b,}Ct?n!}8N?");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Document document0 = Document.createShell("ox'2'b,}Ct?n!}8N?");
      boolean boolean0 = evaluator_IsFirstChild0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Document document0 = Document.createShell(":containsData(%s)");
      Element element0 = document0.head();
      element0.after((Node) document0);
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      boolean boolean0 = evaluator_IsFirstOfType0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-378), 0);
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[5] = (Evaluator) evaluator_IsNthChild0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(444);
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      combiningEvaluator_Or0.add(evaluator_IndexEquals0);
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(0, 0);
      combiningEvaluator_Or0.add(evaluator_IsNthOfType0);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(combiningEvaluator_Or0);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-378), 0);
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[1] = (Evaluator) structuralEvaluator_ImmediatePreviousSibling0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$ContainsText");
      Element element0 = document0.head();
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("org.jsoup.select.Evaluator$ContainsText", "org.jsoup.select.Evaluator$ContainsText");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_AttributeWithValueStarting0);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-114307594), (-114307594));
      Evaluator[] evaluatorArray0 = new Evaluator[9];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[1] = (Evaluator) structuralEvaluator_ImmediateParent0;
      evaluatorArray0[2] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[3] = (Evaluator) evaluator_AttributeWithValueStarting0;
      evaluatorArray0[4] = (Evaluator) structuralEvaluator_ImmediateParent0;
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(1, 1);
      evaluatorArray0[5] = (Evaluator) evaluator_IsNthOfType0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      boolean boolean0 = combiningEvaluator_Or0.matches(document0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(1113, 12);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthChild0);
      Document document0 = Document.createShell(";<_S5aC]H?IFT/5");
      boolean boolean0 = structuralEvaluator_Has0.matches(element0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Document document0 = Document.createShell("=O.WX~uBZR79ln");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastOfType0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Tag tag0 = Tag.valueOf("/qX,wk:]W&=3S{Fzze");
      Element element0 = new Element(tag0, "/qX,wk:]W&=3S{Fzze");
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      boolean boolean0 = evaluator_IsLastOfType0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$ContainsText");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Tag tag0 = Tag.valueOf("/qX,wk:]W&=3S{Fzze");
      Element element0 = new Element(tag0, "/qX,wk:]W&=3S{Fzze");
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      boolean boolean0 = evaluator_IsLastChild0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Document document0 = Document.createShell("*M");
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(0);
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals((-2387));
      Document document0 = Document.createShell("9f`tH:f6?E");
      boolean boolean0 = evaluator_IndexEquals0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = Document.createShell("Am=1P}|]US$![xZ(]L7");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-1));
      boolean boolean0 = evaluator_IndexGreaterThan0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Tag tag0 = Tag.valueOf("YmQ~h[d{|l&#)j");
      FormElement formElement0 = new FormElement(tag0, ":last-of-type", (Attributes) null);
      Elements elements0 = formElement0.getElementsByIndexGreaterThan(1);
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = Document.createShell("ox'2'b,}Ct?n!}8N?");
      Elements elements0 = document0.getElementsByIndexLessThan((-13));
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = null;
      try {
        evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("'", "'");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("\":matchesOwn()", "\":matchesOwn()");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(":ImmediateParent[org.jsoup.select.evaluator$containstext^=org.jsoup.select.evaluator$containstext]", "\":matchesOwn()\"");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";<_S5aC]H?IFT/5", "f]f8", attributes0);
      Attributes attributes1 = attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes1);
      Pattern pattern0 = Pattern.compile("'");
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching(";<_S5aC]H?IFT/5", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      Pattern pattern0 = Pattern.compile("nth-child", (-4735));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("nth-child", pattern0);
      boolean boolean0 = evaluator_AttributeWithValueMatching0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("f]f8", "NA*5SlMC5563QeY");
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes1);
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("f]f8", "NA*5SlMC5563QeY");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("f]f8", "f]f8");
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes1);
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("f]f8", ";<_S5aC]H?IFT/5");
      boolean boolean0 = evaluator_AttributeWithValueContaining0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Document document0 = Document.createShell("nth-last-of-type");
      Elements elements0 = document0.getElementsByAttributeValueContaining("nth-last-of-type", "nth-last-of-type");
      assertTrue(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("vR>3SUYr", "vR>3SUYr");
      Tag tag0 = Tag.valueOf("multiple");
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute("vR>3SUYr", "vR>3SUYr");
      attributes0.put(attribute0);
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "\"':matches(%s)", attributes0);
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";<_S5aC]H?IFT/5", "f]f8", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding(";<_S5aC]H?IFT/5", ":prev*:nth-child(1113n+1113)");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("':first-of-type", "':matches(%s)");
      Document document0 = new Document("?s:Oe%!`M?G./_iW%um");
      boolean boolean0 = evaluator_AttributeWithValueEnding0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("'/8^Z42&", "mk~4:7%3?'P!T+A`");
      Tag tag0 = Tag.valueOf("\"vR>3SUYr");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("'/8^Z42&", "mk~4:7%3?'P!T+A`");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "\"vR>3SUYr", attributes1);
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(pseudoTextElement0, pseudoTextElement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";<_S5aC]H?IFT/5", "f]f8", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(";<_S5aC]H?IFT/5", "nth-child");
      boolean boolean0 = evaluator_AttributeWithValueStarting0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Tag tag0 = Tag.valueOf("YmQ~h[d{|l&#)j");
      FormElement formElement0 = new FormElement(tag0, ":last-of-type", (Attributes) null);
      Elements elements0 = formElement0.getElementsByAttributeValueNot("]M;KQWIJGY.o44L>", "bR]fT$:@.T-qb}");
      assertEquals(1, elements0.size());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[3];
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(";<_S5aC]H?IFT/5", ";<_S5aC]H?IFT/5");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValue0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = Attribute.createFromEncoded(";<_S5aC]H?IFT/5", ";<_S5aC]H?IFT/5");
      Attributes attributes1 = attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes1);
      // Undeclared exception!
      try { 
        combiningEvaluator_And0.matches(element0, element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.CombiningEvaluator$And", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[3];
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(";<_S5aC]H?IFT/5", ";<_S5aC]H?IFT/5");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValue0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";<_S5aC]H?IFT/5", "f]f8", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      boolean boolean0 = combiningEvaluator_And0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Document document0 = Document.createShell("nth-last-of-type");
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("nth-last-of-type", "nth-last-of-type");
      boolean boolean0 = evaluator_AttributeWithValue0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ParseSettings parseSettings0 = new ParseSettings(false, true);
      Tag tag0 = Tag.valueOf(";<_S5aC]H?IFT/5", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attribute attribute0 = new Attribute(";<_S5aC]H?IFT/5", "f]f8", attributes0);
      attributes0.put(attribute0);
      Element element0 = new Element(tag0, ";<_S5aC]H?IFT/5", attributes0);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting(";<_S5aC]H?IFT/5");
      boolean boolean0 = evaluator_AttributeStarting0.matches(element0, element0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("samp");
      Tag tag0 = Tag.valueOf("`sY");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("`sY", "`sY");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "aside", attributes1);
      boolean boolean0 = evaluator_AttributeStarting0.matches(pseudoTextElement0, pseudoTextElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      String string0 = evaluator_AllElements0.toString();
      assertEquals("*", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      String string0 = evaluator_IsFirstOfType0.toString();
      assertEquals(":first-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("nth-of-type", "18&\".k}~E");
      String string0 = evaluator_AttributeWithValueContaining0.toString();
      assertEquals("[nth-of-type*=18&\".k}~e]", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag(":has(%s)");
      String string0 = evaluator_Tag0.toString();
      assertEquals(":has(%s)", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      String string0 = evaluator_ContainsOwnText0.toString();
      assertEquals(":containsOwn()", string0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("noscript");
      Document document0 = Document.createShell("Am=1P}|]US$![xZ(]L7");
      boolean boolean0 = evaluator_ContainsOwnText0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("REMOVE");
      String string0 = evaluator_AttributeStarting0.toString();
      assertEquals("[^remove]", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      String string0 = evaluator_IsFirstChild0.toString();
      assertEquals(":first-child", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("9f`tH:f6?E");
      String string0 = evaluator_Attribute0.toString();
      assertEquals("[9f`tH:f6?E]", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Document document0 = new Document("'");
      Elements elements0 = document0.getElementsByAttribute("'");
      assertEquals(0, elements0.size());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("N=");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_TagEndsWith0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(N=)", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("OH04%}4pc&j");
      Document document0 = Document.createShell("OH04%}4pc&j");
      boolean boolean0 = evaluator_TagEndsWith0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsLastOfType0);
      String string0 = structuralEvaluator_Has0.toString();
      assertEquals(":has(:last-of-type)", string0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      String string0 = evaluator_IsLastOfType0.getPseudoClass();
      assertEquals("nth-last-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(" <%s>", (-1));
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      String string0 = evaluator_MatchesOwn0.toString();
      assertEquals(":matchesOwn( <%s>)", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("s%N6ONb");
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      Tag tag0 = Tag.valueOf("YmQ~h[d{|l&#)j");
      FormElement formElement0 = new FormElement(tag0, ":last-of-type", (Attributes) null);
      boolean boolean0 = evaluator_MatchesOwn0.matches(formElement0, formElement0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, (-1741));
      Document document0 = Document.createShell("");
      // Undeclared exception!
      try { 
        evaluator_IsNthLastChild0.calculatePosition(document0, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IsNthLastChild", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(3, 3);
      String string0 = evaluator_IsNthLastChild0.toString();
      assertEquals(":nth-last-child(3n+3)", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      String string0 = evaluator_IsLastChild0.toString();
      assertEquals(":last-child", string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(444);
      String string0 = evaluator_IndexEquals0.toString();
      assertEquals(":eq(444)", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("*M");
      Document document0 = Document.createShell("*M");
      boolean boolean0 = evaluator_Class0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      String string0 = evaluator_Class0.toString();
      assertEquals(".", string0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-378), 0);
      Evaluator[] evaluatorArray0 = new Evaluator[8];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthChild0;
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("1gnLA`,(,l!'");
      evaluatorArray0[4] = (Evaluator) evaluator_Id0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      String string0 = combiningEvaluator_And0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Document document0 = new Document("");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      boolean boolean0 = evaluator_Id0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("ar)bXOl^:y'Wy");
      Document document0 = Document.createShell("ar)bXOl^:y'Wy");
      boolean boolean0 = evaluator_ContainsData0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData(".z8m|DnJAxVIv|4OEzi");
      String string0 = evaluator_ContainsData0.toString();
      assertEquals(":containsData(.z8m|dnjaxviv|4oezi)", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsRoot0);
      String string0 = structuralEvaluator_ImmediatePreviousSibling0.toString();
      assertEquals(":prev:root", string0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      Document document0 = Document.createShell("nth-last-of-type");
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, (-9));
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthChild0);
      boolean boolean0 = structuralEvaluator_Has0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      String string0 = evaluator_IsOnlyChild0.toString();
      assertEquals(":only-child", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      Element element0 = new Element("nth-last-of-type");
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":eq(2488)");
      boolean boolean0 = evaluator_ContainsText0.matches(element0, element0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText((String) null);
      String string0 = evaluator_ContainsText0.toString();
      assertEquals(":contains()", string0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("':first-of-type", "':matches(%s)");
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueEnding0);
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(structuralEvaluator_PreviousSibling0);
      String string0 = structuralEvaluator_Not0.toString();
      assertEquals(":not:prev*[':first-of-type$=':matches(%s)]", string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      String string0 = evaluator_Matches0.toString();
      assertEquals(":matches()", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      Tag tag0 = Tag.valueOf("/qX,wk:]W&=3S{Fzze");
      Element element0 = new Element(tag0, "/qX,wk:]W&=3S{Fzze");
      Elements elements0 = element0.getElementsMatchingText("");
      assertFalse(elements0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(":has(:last-of-type)", (-2494));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("[nth-of-type*=18&\".k}~e]", pattern0);
      String string0 = evaluator_AttributeWithValueMatching0.toString();
      assertEquals("[[nth-of-type*=18&\".k}~e]~=:has(:last-of-type)]", string0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsEmpty0);
      String string0 = structuralEvaluator_PreviousSibling0.toString();
      assertEquals(":prev*:empty", string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      String string0 = evaluator_MatchText0.toString();
      assertEquals(":matchText", string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      String string0 = evaluator_IsOnlyOfType0.toString();
      assertEquals(":only-of-type", string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      String string0 = evaluator_IndexGreaterThan0.toString();
      assertEquals(":gt(0)", string0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("9f`tH:f6?E", "9f`tH:f6?E");
      String string0 = evaluator_AttributeWithValueNot0.toString();
      assertEquals("[9f`th:f6?e!=9f`th:f6?e]", string0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[3];
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(";<_S5aC]H?IFT/5", ";<_S5aC]H?IFT/5");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValue0;
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluatorArray0[0]);
      evaluatorArray0[1] = (Evaluator) structuralEvaluator_Not0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(combiningEvaluator_Or0);
      String string0 = structuralEvaluator_Has0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("org.jsoup.select.Evaluator$ContainsText", "org.jsoup.select.Evaluator$ContainsText");
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_AttributeWithValueStarting0);
      String string0 = structuralEvaluator_ImmediateParent0.toString();
      assertEquals(":ImmediateParent[org.jsoup.select.evaluator$containstext^=org.jsoup.select.evaluator$containstext]", string0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      String string0 = evaluator_IndexLessThan0.toString();
      assertEquals(":lt(0)", string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      Document document0 = Document.createShell("label");
      Elements elements0 = document0.getElementsByIndexLessThan(3336);
      assertEquals(3, elements0.size());
  }
}
