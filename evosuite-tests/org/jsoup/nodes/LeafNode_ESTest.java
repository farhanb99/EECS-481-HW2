/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 24 19:10:18 GMT 2023
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Comment;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.TextNode;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LeafNode_ESTest extends LeafNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("IYf+.\"z", "IYf+.\"z", "IYf+.\"z");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataNode dataNode0 = new DataNode("9WhiVr_}d>=wmW41wpU");
      dataNode0.doSetBaseUri("9WhiVr_}d>=wmW41wpU");
      assertEquals("#data", dataNode0.nodeName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataNode dataNode0 = new DataNode("", "VpqAd[?83");
      // Undeclared exception!
      try { 
        dataNode0.absUrl("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DataNode dataNode0 = new DataNode("", "");
      DataNode dataNode1 = dataNode0.setWholeData("");
      assertFalse(dataNode1.hasParent());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DataNode dataNode0 = new DataNode("", "");
      boolean boolean0 = dataNode0.hasAttr("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TextNode textNode0 = new TextNode("org.jsoup.select.Evaluator$MatchText", "y:=[!`tW'd");
      TextNode textNode1 = TextNode.createFromEncoded("z|su#m\"(");
      textNode0.setParentNode(textNode1);
      // Undeclared exception!
      try { 
        textNode0.wrap("J");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Leaf Nodes do not have child nodes.
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DataNode dataNode0 = new DataNode("9WhiVr_}d>=wmW41wpU");
      Node node0 = dataNode0.removeAttr("'}p5u](Nx?");
      assertSame(dataNode0, node0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DataNode dataNode0 = new DataNode("caption");
      String string0 = dataNode0.toString();
      assertEquals("caption", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Comment comment0 = new Comment("U(/TWmT;=V`");
      String string0 = comment0.attr("");
      assertEquals("", string0);
  }
}
